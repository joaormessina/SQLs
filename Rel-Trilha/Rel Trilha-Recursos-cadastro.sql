-- Trilhas no ambiente:
SELECT T.CD_TRILHA, 
T.NM_TRILHA AS 'Nome Trilha', T.ID_SIGLA AS 'Código Trilha', 
(CASE T.ID_SITUACAO WHEN 1 THEN 'Ativa' WHEN 0 THEN 'Inativa' END) AS 'Situação Trilha', 
T.DT_CADASTRO AS 'Data Cadastro Trilha', 
T.DS_TRILHA AS 'Descrição Trilha', 
T.NR_APROVEITAMENTO_MINIMO AS 'Aproveitamento Requerido', 
(CASE T.ID_TIPO_SEQUENCIA WHEN 0 THEN 'Por Aprovação' WHEN 1 THEN 'Por realização (conclusão)' END) AS 'Sequenciamento / obrigatoriedade',
T.CD_CERTIFICADO AS 'ID Obj Certificado', O.NM_OBJETOAPRENDIZAGEM AS 'Título Certificado',
(CASE T.IS_PERMITE_PARTICIPACAO WHEN 0 THEN 'Não' WHEN 1 THEN 'Sim' END) AS 'Permite Participação',
(CASE T.IS_POSSUI_CERTIFICACAO WHEN 0 THEN 'Não' WHEN 1 THEN 'Sim' END) AS 'Possui Certificação', 
(SELECT CONCAT('[',IFNULL(C.ID_SIGLA,''),'] ', IFNULL(C.NM_CURSO,''),' [', (CASE C.ID_SITUACAO WHEN 0 THEN 'INATIVO' WHEN 1 THEN 'ATIVO' END) ) FROM TB_CURSO C WHERE C.CD_CURSO = T.CD_PROVA_NOVIDADE) AS 'Prova de Novidade', 
(SELECT GROUP_CONCAT(DISTINCT '[',PA.CD_PUBLICOALVO,'] ',PA.NM_PUBLICOALVO ORDER BY PA.NM_PUBLICOALVO, PA.CD_PUBLICOALVO SEPARATOR '; ') AS 'PAs' FROM TB_TRILHA_PUBLICOALVO TPA INNER JOIN TB_PUBLICOALVO PA ON PA.CD_PUBLICOALVO=TPA.CD_PUBLICOALVO WHERE TPA.CD_TRILHA=T.CD_TRILHA GROUP BY TPA.CD_TRILHA) AS 'Público-Alvo', 
-- (SELECT GROUP_CONCAT(DISTINCT '[',UNI.CD_UNIDADE,'] ',UNI.NM_UNIDADE ORDER BY UNI.NM_UNIDADE, UNI.CD_UNIDADE SEPARATOR '; ') AS 'UnidadesAdmin' FROM TB_TRILHA_UNIDADE_ADMIN TUNI INNER JOIN TB_UNIDADE UNI ON UNI.CD_UNIDADE=TUNI.CD_UNIDADE WHERE TUNI.CD_TRILHA=T.CD_TRILHA GROUP BY TUNI.CD_TRILHA) AS 'UnidadesAdmin', 
IFNULL((SELECT COUNT(DISTINCT TE.CD_ETAPATRILHA) AS 'QntEtapas' FROM TB_TRILHAETAPA TE WHERE TE.CD_TRILHA=T.CD_TRILHA GROUP BY TE.CD_TRILHA) ,'0') AS 'Qnt Etapas', 
IFNULL((SELECT COUNT(*) AS 'QntRecursos' FROM TB_CURSOTRILHA CT WHERE CT.CD_TRILHA=T.CD_TRILHA GROUP BY CT.CD_TRILHA) ,'0') AS 'Qnt Recursos'
FROM TB_TRILHA T 
	LEFT JOIN TB_OBJAPRENDIZAGEM O ON T.CD_CERTIFICADO=O.CD_OBJETOAPRENDIZAGEM AND O.ID_TIPO = 'CERTIFICADOTRILHA'
ORDER BY T.NM_TRILHA, T.CD_TRILHA;


-- Cursos/Subtrilhas/Recursos nas Trilhas do ambiente:
SELECT T.CD_TRILHA, 
T.NM_TRILHA AS 'Nome Trilha', T.ID_SIGLA AS 'Código Trilha',
(CASE T.ID_SITUACAO WHEN 1 THEN 'Ativa' WHEN 0 THEN 'Inativa' END) AS 'Situação Trilha',
-- T.DT_ATUALIZACAO AS 'Data Atualização Trilha', 
-- T.NR_APROVEITAMENTO_MINIMO AS 'Aproveitamento Requerido', 
(CASE T.ID_TIPO_SEQUENCIA WHEN 0 THEN 'Por Aprovação' WHEN 1 THEN 'Por realização (conclusão)' END) AS 'Sequenciamento / obrigatoriedade',

TE.CD_ETAPATRILHA, 
TE.NR_SEQUENCIA AS 'Ordem Etapa', TE.NM_ETAPATRILHA 'Nome Etapa',
(SELECT COUNT(*) FROM TB_CURSOTRILHA CTIN WHERE CTIN.CD_TRILHAETAPA=TE.CD_ETAPATRILHA) AS 'Qnt Recursos na Etapa',

CT.NR_ORDEM_EXIBICAO AS 'Ordem Exibição', CT.CD_ITEM AS 'ID Recurso', 
(CASE CT.ID_TIPO_ITEM WHEN 0 THEN 'Curso' WHEN 1 THEN 'Subtrilha' WHEN 4 THEN 'Recurso' 
	WHEN 5 THEN 'Vídeo-Upload' WHEN 6 THEN 'Vídeo-Link' WHEN 7 THEN 'Texto'
	WHEN 8 THEN 'Apresentação' WHEN 9 THEN 'Podcast' END) AS 'Tipo Recurso',
(CASE CT.ID_TIPO_ITEM 
	WHEN 0 THEN (SELECT C.ID_SIGLA FROM TB_CURSO C WHERE C.CD_CURSO=CT.CD_ITEM AND CT.ID_TIPO_ITEM=0)
	WHEN 1 THEN (SELECT TIN.ID_SIGLA FROM TB_TRILHA TIN WHERE TIN.CD_TRILHA=CT.CD_ITEM AND CT.ID_TIPO_ITEM=1)
	ELSE '-' END) AS 'Código (Curso ou Trilha)', 
CT.DS_NOME AS 'Nome Recurso', 
(CASE CT.ID_TIPO_ITEM 
	WHEN 0 THEN (SELECT (CASE C.ID_SITUACAO WHEN 0 THEN 'Inativo' WHEN 1 THEN 'Ativo' END) FROM TB_CURSO C WHERE C.CD_CURSO=CT.CD_ITEM AND CT.ID_TIPO_ITEM=0)
	WHEN 1 THEN (SELECT (CASE TIN.ID_SITUACAO WHEN 0 THEN 'Inativa' WHEN 1 THEN 'Ativa' END) FROM TB_TRILHA TIN WHERE TIN.CD_TRILHA=CT.CD_ITEM AND CT.ID_TIPO_ITEM=1)
	ELSE '-' END) AS 'Situação Curso/Subtrilha',
(SELECT (CASE C.ID_MODALIDADE WHEN 0 THEN 'Presencial' WHEN 1 THEN 'Distância' WHEN 2 THEN 'Síncrono' WHEN 3 THEN 'Prova' WHEN 4 THEN 'Blended' WHEN 5 THEN 'Modular' END) 
	FROM TB_CURSO C WHERE CT.CD_ITEM=C.CD_CURSO AND CT.ID_TIPO_ITEM=0) AS 'Modalidade Curso', 
(SELECT CATC.NM_CATEGORIA FROM TB_CURSO C INNER JOIN TB_CATEGORIA_CURSO CATC WHERE CT.ID_TIPO_ITEM=0 AND CT.CD_ITEM=C.CD_CURSO AND C.CD_CATEGORIA=CATC.CD_CATEGORIA) AS 'Categoria Curso',
(SELECT C.NR_CARGAHORARIA FROM TB_CURSO C WHERE CT.ID_TIPO_ITEM=0 AND CT.CD_ITEM=C.CD_CURSO) AS 'Carga Horária do Curso (minutos)', 
(CASE CT.ID_OPCIONAL WHEN 0 THEN 'Não' WHEN 1 THEN 'Sim' END) AS 'Obrigatório na Etapa', 
CT.NR_SEQUENCIA_ETAPA AS 'Sequência Recurso', CT.NR_PESO AS 'Peso Recurso'
, (SELECT GROUP_CONCAT('[',CON.CD_CONQUISTA,'] ',IFNULL(CON.NR_PONTOS,'-')) FROM TB_CONQUISTA CON WHERE CON.CD_CURSO = CT.CD_ITEM AND CT.ID_TIPO_ITEM=0) AS 'Desafio Curso'

FROM TB_TRILHA T 
LEFT JOIN TB_TRILHAETAPA TE ON TE.CD_TRILHA=T.CD_TRILHA
LEFT JOIN TB_CURSOTRILHA CT ON CT.CD_TRILHA = T.CD_TRILHA AND TE.CD_ETAPATRILHA=CT.CD_TRILHAETAPA
WHERE 1=1 
--	AND T.CD_TRILHA IN (14)
-- GROUP BY T.CD_TRILHA
ORDER BY T.NM_TRILHA, T.CD_TRILHA, TE.NR_SEQUENCIA, TE.CD_ETAPATRILHA, CT.NR_ORDEM_EXIBICAO, CT.CD_ITEM ; 


-- Verificar erro na sequência de Etapa de Trilha:
SELECT SEQUENCIAS.* , IF(SEQUENCIAS.SumNrSequencia = SEQUENCIAS.SeqTriangular, 'Ok', 'Erro') AS 'VerSequencial' 
FROM 
	(SELECT TE.CD_TRILHA, COUNT(TE.CD_ETAPATRILHA) AS 'CountEtapas', SUM(TE.NR_SEQUENCIA) AS 'SumNrSequencia'
	, ((( COUNT(TE.CD_ETAPATRILHA) * (COUNT(TE.CD_ETAPATRILHA)+1) )/2) DIV 1) AS 'SeqTriangular'
	FROM TB_TRILHAETAPA TE GROUP BY TE.CD_TRILHA ORDER BY COUNT(TE.CD_ETAPATRILHA), SUM(TE.NR_SEQUENCIA) 
	) AS SEQUENCIAS  
ORDER BY VerSequencial , SEQUENCIAS.CountEtapas, SEQUENCIAS.SumNrSequencia, SEQUENCIAS.CD_TRILHA ;
-- Sequência Triangular: (n(n+1))/2  ->  1 3 6 10 15 21 28 36 45 55 66 78 91 105 120 136 153 171 190 210 231 253
SELECT * FROM TB_TRILHAETAPA TE WHERE TE.CD_TRILHA IN (121) ORDER BY TE.CD_TRILHA, NR_SEQUENCIA ;
