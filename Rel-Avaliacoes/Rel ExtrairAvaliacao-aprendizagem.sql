-- EXTRAIR AVALIAÇÃO 
-- Avaliações de Aprendizagem cadastradas

SELECT EXTRAVA.* FROM (
(
-- AVALIAÇÕES APRENDIZAGEM / QUESTOES AVULSAS:
SELECT  O.CD_OBJETOAPRENDIZAGEM AS 'ID AVALIAÇÃO', 
O.NM_OBJETOAPRENDIZAGEM AS 'AVALIAÇÃO', 
 O.ID_TIPO AS 'TIPO AVALIAÇÃO', O.DT_CADASTRO AS 'DATA CADASTRO', 
 (CASE O.ID_SITUACAO WHEN 0 THEN 'INATIVA' WHEN 1 THEN 'ATIVA' END) AS 'SITUAÇÃO AVALIAÇÃO',
/* (SELECT COUNT(DISTINCT OUNI.CD_UNIDADE) FROM TB_OBJAPRENDIZAGEM_UNIDADE_ADMIN OUNI 
 	 WHERE OUNI.CD_OBJETOAPRENDIZAGEM=O.CD_OBJETOAPRENDIZAGEM GROUP BY O.CD_OBJETOAPRENDIZAGEM) AS 'QNT UNIDADES DE ADMIN',
 (SELECT GROUP_CONCAT(CONCAT(IFNULL(UNI.NM_UNIDADE,''),'/Cod: "',IFNULL(UNI.DS_CODIGO,''),'"') ORDER BY UNI.ID_HIERARQUIA SEPARATOR ' |' ) 
 	 FROM TB_OBJAPRENDIZAGEM_UNIDADE_ADMIN OUNI INNER JOIN TB_UNIDADE UNI ON OUNI.CD_UNIDADE=UNI.CD_UNIDADE 
	 WHERE OUNI.CD_OBJETOAPRENDIZAGEM=O.CD_OBJETOAPRENDIZAGEM GROUP BY O.CD_OBJETOAPRENDIZAGEM) AS 'UNIDADES DE ADMIN (Nome,Código)', */
 (SELECT COUNT(DISTINCT IC.CD_CURSO) FROM TB_ITEMCURSO IC WHERE IC.CD_OBJETOAPRENDIZAGEM=O.CD_OBJETOAPRENDIZAGEM) AS 'QNT CURSOS ASSOCIADOS', 
 (SELECT GROUP_CONCAT(DISTINCT C.CD_CURSO, ' Cod: "',IFNULL(C.ID_SIGLA,''),'"' ORDER BY C.NM_CURSO SEPARATOR ' |' ) 
 	 FROM TB_ITEMCURSO IC INNER JOIN TB_CURSO C ON C.CD_CURSO=IC.CD_CURSO 
	 WHERE IC.CD_OBJETOAPRENDIZAGEM=O.CD_OBJETOAPRENDIZAGEM GROUP BY IC.CD_OBJETOAPRENDIZAGEM) AS 'CURSOS ASSOCIADOS (ID,Código)', 
-- OAVA3.CD_AVALIACAOLMS,
 AVA.DS_AVALIACAO AS 'DESCRIÇÃO AVALIAÇÃO', AVA.DS_FEEDBACK_GERAL AS 'FEEDBACK GERAL',
 AVAI.NR_POSICAO AS 'POSIÇÃO ITEM', 
-- IA.CD_ITEMAVALIACAO, 
 IA.ID_TIPO AS 'TIPO ITEM', '-' AS 'TÍTULO GRUPO', '-' AS 'Divide por Dificuldade', '-' AS 'Selecionar Questões do Grupo',

CATQ.DS_TITULO AS CATEGORIA, (SELECT CAT2.DS_TITULO FROM TB_CATEGORIAQUESTAO CAT2 WHERE CAT2.CD_CATEGORIAQUESTAO=CATQ.CD_RAIZ) AS 'CATEGORIA RAIZ',
IQ.CD_ITEMAVALIACAO AS ID_QUESTAO, COALESCE(IQ.DS_ENUNCIADO_FILTRO, IQ.DS_ENUNCIADO) AS ENUNCIADO,
(CASE IQ.ID_SITUACAO WHEN 0 THEN 'Inativa' WHEN 1 THEN 'Ativa' ELSE '-' END) AS 'SITUAÇÃO QUESTÃO', 
(CASE IQ.ID_TIPOQUESTAO WHEN 0 THEN 'Objetiva' WHEN 1 THEN 'Múltipla Escolha' WHEN 2 THEN 'Verdadeira/Falsa' WHEN 3 THEN 'Dissertativa' 
	WHEN 4 THEN 'Escala' WHEN 5 THEN 'Entrega de Trabalho' WHEN 6 THEN 'Nota Atribuída' 
	WHEN 7 THEN (CASE IQ.ID_TEXTOSIMPLES WHEN 0 THEN 'Valor Numérico' WHEN 1 THEN 'Texto Simples' END) 
	WHEN 8 THEN 'Associativa' WHEN 9 THEN 'Completar Lacuna' END) AS 'TIPO QUESTÃO',
(CASE IQ.ID_CALCULOMULTIPLAESCOLHA WHEN 0 THEN 'Todas alternativas' WHEN 1 THEN 'Somenta corretas' ELSE '-' END) AS 'Cálculo Multipla Escolha',
-- (CASE IQ.ID_OBRIGATORIO WHEN 1 THEN 'Sim' ELSE 'Não' END) AS 'OBRIGATORIA',
(CASE IQ.ID_DIFICULDADE WHEN 0 THEN 'Fácil' WHEN 1 THEN 'Médio' WHEN 2 THEN 'Difícil' ELSE '-' END) AS 'DIFICULDADE',
  IQ.DS_FEEDBACKGERAL AS 'FEEDBACK QUESTÃO', IQ.DS_FEEDBACKAPROVADO AS 'FEEDBACK APROVADO', IQ.DS_FEEDBACKPARCIAL AS 'FEEDBACK PARCIAL', IQ.DS_FEEDBACKREPROVADO AS 'FEEDBACK REPROVADO', IQ.DS_DICA AS 'DICA',
(CASE IQ.ID_NUMERACAO WHEN 0 THEN 'a,b,c' WHEN 1 THEN 'A,B,C' WHEN 2 THEN '1,2,3' WHEN 3 THEN 'I,II,III' ELSE '-' END) AS 'NUMERAÇÃO DAS ALTERNATIVAS',
(CASE IQ.ID_ALEATORIO WHEN 1 THEN 'Sim' WHEN 0 THEN 'Não' END) AS 'ALTERNATIVAS ALEATÓRIAS',

-- ALTQ.CD_ALTERNATIVAQUESTAO, 
(CASE WHEN IQ.ID_TIPOQUESTAO NOT IN (3,4,5,6) THEN ALTQ.ID_POSICAO ELSE '-' END) AS 'POSIÇÃO DA ALTERNATIVA',
(CASE ALTQ.ID_POSICAOFIXA WHEN 0 THEN 'Não' WHEN 1 THEN 'Sim' ELSE '-' END) AS 'POSIÇÃO FIXA',
(CASE WHEN IQ.ID_TIPOQUESTAO NOT IN (3,4,5,6) THEN ALTQ.DS_ALTERNATIVA ELSE '-' END) AS 'DESCRIÇÃO DA ALTERNATIVA',
-- (CASE WHEN IQ.ID_TIPOQUESTAO NOT IN (3,4,5,6) THEN IF(ALTQ.DS_ALTERNATIVA_TEXT IS NOT NULL AND ALTQ.DS_ALTERNATIVA_TEXT != '', ALTQ.DS_ALTERNATIVA_TEXT, ALTQ.DS_ALTERNATIVA) ELSE '-' END) AS 'DESCRIÇÃO DA ALTERNATIVA',
(CASE WHEN (IQ.ID_TIPOQUESTAO=9 AND ALTQ.ID_TIPOLACUNA=0) THEN 'Texto'
	WHEN (IQ.ID_TIPOQUESTAO=9 AND ALTQ.ID_TIPOLACUNA=1) THEN 'Lacuna' 
	WHEN (IQ.ID_TIPOQUESTAO=9 AND ALTQ.ID_TIPOLACUNA=2) THEN 'Parágrafo' ELSE '-' END) AS 'Tipo Lacuna',
(CASE WHEN (IQ.ID_TIPOQUESTAO=7 AND IQ.ID_TEXTOSIMPLES=0) THEN ALTQ.NR_MARGEMERRO ELSE '-' END) AS 'Margem Erro (Texto Numérico)',
(CASE WHEN (IQ.ID_TIPOQUESTAO=7 AND IQ.ID_TEXTOSIMPLES=1) THEN (CASE IQ.ID_CASESENSITIVE WHEN 0 THEN 'Não' WHEN 1 THEN 'Sim' END) ELSE '-' END) AS 'Diferenciar Maiúsculas-Minúsculas (Texto Simples)',
(CASE IQ.ID_TIPOQUESTAO WHEN 9 THEN 	-- QUANDO questão tipo Completar Lacuna.
	(CASE WHEN ALTQ.ID_TIPOLACUNA IN (0,2) THEN '-' 	-- Alternativas tipo texto/parágrafo não possuem resposta; já as lacunas não possuem limite pra quantas respostas cada um pode ter, assim retornadas por group_concat abaixo.
		WHEN 1 THEN (SELECT CONCAT('"',GROUP_CONCAT(RL.DS_RESPOSTA ORDER BY RL.CD_RESPOSTALACUNA SEPARATOR '"; "'),'".') FROM TB_RESPOSTA_LACUNA RL WHERE RL.CD_ALTERNATIVAQUESTAO=ALTQ.CD_ALTERNATIVAQUESTAO GROUP BY RL.CD_ALTERNATIVAQUESTAO) END) 
	WHEN 8 THEN '-'	-- QUANDO questão tipo Associativa a resposta será exibida na coluna seguinte.
	ELSE 		-- SENÃO, segue case normal abaixo. Para questão tipo (3,4,5,6) Dissertativa/Escala/Entrega de Trabalho/Nota Atribuída, não se aplica.
	(CASE ALTQ.ID_CORRETA WHEN 0 THEN 'Incorreta' WHEN 1 THEN 'CORRETA' ELSE '-' END) END) AS 'ALTERNATIVAS CORRETAS',
-- ALTQ.CD_ASSOCIATIVA, 
ALTASSO.DS_DESCRICAO AS 'ASSOCIATIVA CORRETA'

FROM TB_OBJAPRENDIZAGEM O 
INNER JOIN TB_OBJAPRENDIZAGEM_AVALIACAO OAVA3 ON OAVA3.CD_OBJETOAPRENDIZAGEM=O.CD_OBJETOAPRENDIZAGEM AND O.ID_TIPO LIKE 'AVALIACAO_APRENDIZAGEM'
INNER JOIN TB_AVALIACAOLMS AVA ON AVA.CD_AVALIACAOLMS=OAVA3.CD_AVALIACAOLMS
  INNER JOIN TB_AVALIACAOLMS_ITEMAVALIACAO AVAI ON AVAI.CD_AVALIACAOLMS = AVA.CD_AVALIACAOLMS 
  INNER JOIN TB_ITEMAVALIACAO IA ON IA.CD_ITEMAVALIACAO = AVAI.CD_ITEMAVALIACAO AND IA.ID_TIPO='QUESTAO'
  INNER JOIN TB_ITEMAVALIACAO_QUESTAO IQ ON IQ.CD_ITEMAVALIACAO=IA.CD_ITEMAVALIACAO AND IQ.ID_TIPOAVALIACAO=0 AND IQ.ID_TIPOQUESTAO NOT IN (4) 
  INNER JOIN TB_CATEGORIAQUESTAO CATQ ON CATQ.CD_CATEGORIAQUESTAO=IQ.CD_CATEGORIAQUESTAO
  LEFT JOIN TB_ALTERNATIVAQUESTAO ALTQ ON ALTQ.CD_QUESTAOLMS = IQ.CD_ITEMAVALIACAO -- AND IQ.ID_TIPOQUESTAO IN (0, 1)
  LEFT JOIN TB_ALTERNATIVA_ASSOCIATIVA ALTASSO ON ALTASSO.CD_QUESTAOLMS=IQ.CD_ITEMAVALIACAO AND ALTASSO.CD_ASSOCIATIVA=ALTQ.CD_ASSOCIATIVA
WHERE IA.ID_TIPO='QUESTAO'
--	AND O.CD_OBJETOAPRENDIZAGEM IN (116)
-- GROUP BY O.CD_OBJETOAPRENDIZAGEM
ORDER BY `AVALIAÇÃO`, AVAI.NR_POSICAO, `CATEGORIA RAIZ`, CATEGORIA, ENUNCIADO, ALTQ.ID_POSICAO 
-- ;
)

UNION
(
-- AVALIAÇÕES APRENDIZAGEM / GRUPO COM QUESTAO AVULSA:
SELECT  O.CD_OBJETOAPRENDIZAGEM AS 'ID AVALIAÇÃO', 
O.NM_OBJETOAPRENDIZAGEM AS 'AVALIAÇÃO', 
 O.ID_TIPO AS 'TIPO AVALIAÇÃO', O.DT_CADASTRO AS 'DATA CADASTRO', 
 (CASE O.ID_SITUACAO WHEN 0 THEN 'INATIVA' WHEN 1 THEN 'ATIVA' END) AS 'SITUAÇÃO AVALIAÇÃO',
/* (SELECT COUNT(DISTINCT OUNI.CD_UNIDADE) FROM TB_OBJAPRENDIZAGEM_UNIDADE_ADMIN OUNI 
 	 WHERE OUNI.CD_OBJETOAPRENDIZAGEM=O.CD_OBJETOAPRENDIZAGEM GROUP BY O.CD_OBJETOAPRENDIZAGEM) AS 'QNT UNIDADES DE ADMIN',
 (SELECT GROUP_CONCAT(CONCAT(IFNULL(UNI.NM_UNIDADE,''),'/Cod: "',IFNULL(UNI.DS_CODIGO,''),'"') ORDER BY UNI.ID_HIERARQUIA SEPARATOR ' |' ) 
 	 FROM TB_OBJAPRENDIZAGEM_UNIDADE_ADMIN OUNI INNER JOIN TB_UNIDADE UNI ON OUNI.CD_UNIDADE=UNI.CD_UNIDADE 
	 WHERE OUNI.CD_OBJETOAPRENDIZAGEM=O.CD_OBJETOAPRENDIZAGEM GROUP BY O.CD_OBJETOAPRENDIZAGEM) AS 'UNIDADES DE ADMIN (Nome,Código)', */
 (SELECT COUNT(DISTINCT IC.CD_CURSO) FROM TB_ITEMCURSO IC WHERE IC.CD_OBJETOAPRENDIZAGEM=O.CD_OBJETOAPRENDIZAGEM) AS 'QNT CURSOS ASSOCIADOS', 
 (SELECT GROUP_CONCAT(DISTINCT C.CD_CURSO, ' Cod: "',IFNULL(C.ID_SIGLA,''),'"' ORDER BY C.NM_CURSO SEPARATOR ' |' ) 
 	 FROM TB_ITEMCURSO IC INNER JOIN TB_CURSO C ON C.CD_CURSO=IC.CD_CURSO 
	 WHERE IC.CD_OBJETOAPRENDIZAGEM=O.CD_OBJETOAPRENDIZAGEM GROUP BY IC.CD_OBJETOAPRENDIZAGEM) AS 'CURSOS ASSOCIADOS (ID,Código)', 
-- OAVA3.CD_AVALIACAOLMS,
 AVA.DS_AVALIACAO AS 'DESCRIÇÃO AVALIAÇÃO', AVA.DS_FEEDBACK_GERAL AS 'FEEDBACK GERAL',
 AVAI.NR_POSICAO AS 'POSIÇÃO ITEM', 
-- IA.CD_ITEMAVALIACAO, 
 IA.ID_TIPO AS 'TIPO ITEM', IA.DS_TITULO AS 'TÍTULO GRUPO', 
 (CASE IAG.IS_DIVIDIDO_DIFICULDADE WHEN 0 THEN 'Não' WHEN 1 THEN 'Sim' END) AS 'Divide por Dificuldade',
 (CASE WHEN IAG.IS_DIVIDIDO_DIFICULDADE=0 THEN IAG.NR_QUESTOES 
 	WHEN IAG.IS_DIVIDIDO_DIFICULDADE=1 THEN CONCAT('Fácil: ',IAG.NR_QUESTOESFACIL,' / Média: ',IAG.NR_QUESTOESMEDIA,' / Difícil: ',IAG.NR_QUESTOESDIFICIL) END) AS 'Selecionar Questões do Grupo', 

CATQ.DS_TITULO AS CATEGORIA, (SELECT CAT2.DS_TITULO FROM TB_CATEGORIAQUESTAO CAT2 WHERE CAT2.CD_CATEGORIAQUESTAO=CATQ.CD_RAIZ) AS 'CATEGORIA RAIZ',
IQ.CD_ITEMAVALIACAO AS ID_QUESTAO, COALESCE(IQ.DS_ENUNCIADO_FILTRO, IQ.DS_ENUNCIADO) AS ENUNCIADO,
(CASE IQ.ID_SITUACAO WHEN 0 THEN 'Inativa' WHEN 1 THEN 'Ativa' ELSE '-' END) AS 'SITUAÇÃO QUESTÃO', 
(CASE IQ.ID_TIPOQUESTAO WHEN 0 THEN 'Objetiva' WHEN 1 THEN 'Múltipla Escolha' WHEN 2 THEN 'Verdadeira/Falsa' WHEN 3 THEN 'Dissertativa' 
	WHEN 4 THEN 'Escala' WHEN 5 THEN 'Entrega de Trabalho' WHEN 6 THEN 'Nota Atribuída' 
	WHEN 7 THEN (CASE IQ.ID_TEXTOSIMPLES WHEN 0 THEN 'Valor Numérico' WHEN 1 THEN 'Texto Simples' END) 
	WHEN 8 THEN 'Associativa' WHEN 9 THEN 'Completar Lacuna' END) AS 'TIPO QUESTÃO',
(CASE IQ.ID_CALCULOMULTIPLAESCOLHA WHEN 0 THEN 'Todas alternativas' WHEN 1 THEN 'Somenta corretas' ELSE '-' END) AS 'Cálculo Multipla Escolha',
-- (CASE IQ.ID_OBRIGATORIO WHEN 1 THEN 'Sim' ELSE 'Não' END) AS 'OBRIGATORIA',
(CASE IQ.ID_DIFICULDADE WHEN 0 THEN 'Fácil' WHEN 1 THEN 'Médio' WHEN 2 THEN 'Difícil' ELSE '-' END) AS 'DIFICULDADE',
  IQ.DS_FEEDBACKGERAL AS 'FEEDBACK QUESTÃO', IQ.DS_FEEDBACKAPROVADO AS 'FEEDBACK APROVADO', IQ.DS_FEEDBACKPARCIAL AS 'FEEDBACK PARCIAL', IQ.DS_FEEDBACKREPROVADO AS 'FEEDBACK REPROVADO', IQ.DS_DICA AS 'DICA',
(CASE IQ.ID_NUMERACAO WHEN 0 THEN 'a,b,c' WHEN 1 THEN 'A,B,C' WHEN 2 THEN '1,2,3' WHEN 3 THEN 'I,II,III' ELSE '-' END) AS 'NUMERAÇÃO DAS ALTERNATIVAS',
(CASE IQ.ID_ALEATORIO WHEN 1 THEN 'Sim' WHEN 0 THEN 'Não' END) AS 'ALTERNATIVAS ALEATÓRIAS',

-- ALTQ.CD_ALTERNATIVAQUESTAO, 
(CASE WHEN IQ.ID_TIPOQUESTAO NOT IN (3,4,5,6) THEN ALTQ.ID_POSICAO ELSE '-' END) AS 'POSIÇÃO DA ALTERNATIVA',
(CASE ALTQ.ID_POSICAOFIXA WHEN 0 THEN 'Não' WHEN 1 THEN 'Sim' ELSE '-' END) AS 'POSIÇÃO FIXA',
(CASE WHEN IQ.ID_TIPOQUESTAO NOT IN (3,4,5,6) THEN ALTQ.DS_ALTERNATIVA ELSE '-' END) AS 'DESCRIÇÃO DA ALTERNATIVA',
-- (CASE WHEN IQ.ID_TIPOQUESTAO NOT IN (3,4,5,6) THEN IF(ALTQ.DS_ALTERNATIVA_TEXT IS NOT NULL AND ALTQ.DS_ALTERNATIVA_TEXT != '', ALTQ.DS_ALTERNATIVA_TEXT, ALTQ.DS_ALTERNATIVA) ELSE '-' END) AS 'DESCRIÇÃO DA ALTERNATIVA',
(CASE WHEN (IQ.ID_TIPOQUESTAO=9 AND ALTQ.ID_TIPOLACUNA=0) THEN 'Texto'
	WHEN (IQ.ID_TIPOQUESTAO=9 AND ALTQ.ID_TIPOLACUNA=1) THEN 'Lacuna' 
	WHEN (IQ.ID_TIPOQUESTAO=9 AND ALTQ.ID_TIPOLACUNA=2) THEN 'Parágrafo' ELSE '-' END) AS 'Tipo Lacuna',
(CASE WHEN (IQ.ID_TIPOQUESTAO=7 AND IQ.ID_TEXTOSIMPLES=0) THEN ALTQ.NR_MARGEMERRO ELSE '-' END) AS 'Margem Erro (Texto Numérico)',
(CASE WHEN (IQ.ID_TIPOQUESTAO=7 AND IQ.ID_TEXTOSIMPLES=1) THEN (CASE IQ.ID_CASESENSITIVE WHEN 0 THEN 'Não' WHEN 1 THEN 'Sim' END) ELSE '-' END) AS 'Diferenciar Maiúsculas-Minúsculas (Texto Simples)',
(CASE IQ.ID_TIPOQUESTAO WHEN 9 THEN 			-- QUANDO questão tipo Completar Lacuna.
	(CASE WHEN ALTQ.ID_TIPOLACUNA IN (0,2) THEN '-' 	-- Alternativas tipo texto/parágrafo não possuem resposta; já as lacunas não possuem limite pra quantas respostas cada um pode ter, assim retornadas por group_concat abaixo.
		WHEN 1 THEN (SELECT CONCAT('"',GROUP_CONCAT(RL.DS_RESPOSTA ORDER BY RL.CD_RESPOSTALACUNA SEPARATOR '"; "'),'".') FROM TB_RESPOSTA_LACUNA RL WHERE RL.CD_ALTERNATIVAQUESTAO=ALTQ.CD_ALTERNATIVAQUESTAO GROUP BY RL.CD_ALTERNATIVAQUESTAO) END) 
	WHEN 8 THEN '-'	-- QUANDO questão tipo Associativa a resposta será exibida na coluna seguinte.
	ELSE 		-- SENÃO, segue case normal abaixo. Para questão tipo (3,4,5,6) Dissertativa/Escala/Entrega de Trabalho/Nota Atribuída, não se aplica.
	(CASE ALTQ.ID_CORRETA WHEN 0 THEN 'Incorreta' WHEN 1 THEN 'CORRETA' ELSE '-' END) END) AS 'ALTERNATIVAS CORRETAS',
-- ALTQ.CD_ASSOCIATIVA, 
ALTASSO.DS_DESCRICAO AS 'ASSOCIATIVA CORRETA'

FROM TB_OBJAPRENDIZAGEM O 
INNER JOIN TB_OBJAPRENDIZAGEM_AVALIACAO OAVA3 ON OAVA3.CD_OBJETOAPRENDIZAGEM=O.CD_OBJETOAPRENDIZAGEM AND O.ID_TIPO LIKE 'AVALIACAO_APRENDIZAGEM'
INNER JOIN TB_AVALIACAOLMS AVA ON AVA.CD_AVALIACAOLMS=OAVA3.CD_AVALIACAOLMS
  INNER JOIN TB_AVALIACAOLMS_ITEMAVALIACAO AVAI ON AVAI.CD_AVALIACAOLMS = AVA.CD_AVALIACAOLMS
  INNER JOIN TB_ITEMAVALIACAO IA ON IA.CD_ITEMAVALIACAO = AVAI.CD_ITEMAVALIACAO AND IA.ID_TIPO LIKE 'GRUPO'

  INNER JOIN TB_ITEMAVALIACAO_GRUPO IAG ON IAG.CD_ITEMAVALIACAO=IA.CD_ITEMAVALIACAO 
  INNER JOIN TB_GRUPOQUESTAO_QUESTAOLMS GRQ ON GRQ.CD_GRUPOQUESTAO=IAG.CD_ITEMAVALIACAO -- Questoes avulsas dentro de um Grupo
	  	INNER JOIN TB_ITEMAVALIACAO IA2 ON IA2.CD_ITEMAVALIACAO=GRQ.CD_QUESTAOLMS

  INNER JOIN TB_ITEMAVALIACAO_QUESTAO IQ ON IQ.CD_ITEMAVALIACAO=IA2.CD_ITEMAVALIACAO AND IQ.ID_TIPOAVALIACAO=0 AND IQ.ID_TIPOQUESTAO NOT IN (4) 
  		INNER JOIN TB_CATEGORIAQUESTAO CATQ ON CATQ.CD_CATEGORIAQUESTAO=IQ.CD_CATEGORIAQUESTAO
  LEFT JOIN TB_ALTERNATIVAQUESTAO ALTQ ON ALTQ.CD_QUESTAOLMS = IQ.CD_ITEMAVALIACAO 
  LEFT JOIN TB_ALTERNATIVA_ASSOCIATIVA ALTASSO ON ALTASSO.CD_QUESTAOLMS=IQ.CD_ITEMAVALIACAO AND ALTASSO.CD_ASSOCIATIVA=ALTQ.CD_ASSOCIATIVA
	WHERE IA.ID_TIPO='GRUPO'  AND IQ.CD_ITEMAVALIACAO IS NOT NULL 
--		AND O.CD_OBJETOAPRENDIZAGEM IN (116)
-- GROUP BY O.CD_OBJETOAPRENDIZAGEM, IA.CD_ITEMAVALIACAO
ORDER BY `AVALIAÇÃO`, AVAI.NR_POSICAO, `CATEGORIA RAIZ`, CATEGORIA, ENUNCIADO, ALTQ.ID_POSICAO 
-- ;
)

UNION

(
-- AVALIAÇÕES APRENDIZAGEM / GRUPO DE CATEGORIA (com suas subcategorias):
SELECT  O.CD_OBJETOAPRENDIZAGEM AS 'ID AVALIAÇÃO', 
O.NM_OBJETOAPRENDIZAGEM AS 'AVALIAÇÃO', 
 O.ID_TIPO AS 'TIPO AVALIAÇÃO', O.DT_CADASTRO AS 'DATA CADASTRO', 
 (CASE O.ID_SITUACAO WHEN 0 THEN 'INATIVA' WHEN 1 THEN 'ATIVA' END) AS 'SITUAÇÃO AVALIAÇÃO',
/* (SELECT COUNT(DISTINCT OUNI.CD_UNIDADE) FROM TB_OBJAPRENDIZAGEM_UNIDADE_ADMIN OUNI 
 	 WHERE OUNI.CD_OBJETOAPRENDIZAGEM=O.CD_OBJETOAPRENDIZAGEM GROUP BY O.CD_OBJETOAPRENDIZAGEM) AS 'QNT UNIDADES DE ADMIN',
 (SELECT GROUP_CONCAT(CONCAT(IFNULL(UNI.NM_UNIDADE,''),'/Cod: "',IFNULL(UNI.DS_CODIGO,''),'"') ORDER BY UNI.ID_HIERARQUIA SEPARATOR ' |' ) 
 	 FROM TB_OBJAPRENDIZAGEM_UNIDADE_ADMIN OUNI INNER JOIN TB_UNIDADE UNI ON OUNI.CD_UNIDADE=UNI.CD_UNIDADE 
	 WHERE OUNI.CD_OBJETOAPRENDIZAGEM=O.CD_OBJETOAPRENDIZAGEM GROUP BY O.CD_OBJETOAPRENDIZAGEM) AS 'UNIDADES DE ADMIN (Nome,Código)', */
 (SELECT COUNT(DISTINCT IC.CD_CURSO) FROM TB_ITEMCURSO IC WHERE IC.CD_OBJETOAPRENDIZAGEM=O.CD_OBJETOAPRENDIZAGEM) AS 'QNT CURSOS ASSOCIADOS', 
 (SELECT GROUP_CONCAT(DISTINCT C.CD_CURSO, ' Cod: "',IFNULL(C.ID_SIGLA,''),'"' ORDER BY C.NM_CURSO SEPARATOR ' |' ) 
 	 FROM TB_ITEMCURSO IC INNER JOIN TB_CURSO C ON C.CD_CURSO=IC.CD_CURSO 
	 WHERE IC.CD_OBJETOAPRENDIZAGEM=O.CD_OBJETOAPRENDIZAGEM GROUP BY IC.CD_OBJETOAPRENDIZAGEM) AS 'CURSOS ASSOCIADOS (ID,Código)', 
-- OAVA3.CD_AVALIACAOLMS,
 AVA.DS_AVALIACAO AS 'DESCRIÇÃO AVALIAÇÃO', AVA.DS_FEEDBACK_GERAL AS 'FEEDBACK GERAL',
 AVAI.NR_POSICAO AS 'POSIÇÃO ITEM', 
-- IA.CD_ITEMAVALIACAO, 
 IA.ID_TIPO AS 'TIPO ITEM', IA.DS_TITULO AS 'TÍTULO GRUPO', 
 (CASE IAG.IS_DIVIDIDO_DIFICULDADE WHEN 0 THEN 'Não' WHEN 1 THEN 'Sim' END) AS 'Divide por Dificuldade',
 (CASE WHEN IAG.IS_DIVIDIDO_DIFICULDADE=0 THEN IAG.NR_QUESTOES 
 	WHEN IAG.IS_DIVIDIDO_DIFICULDADE=1 THEN CONCAT('Fácil: ',IAG.NR_QUESTOESFACIL,' / Média: ',IAG.NR_QUESTOESMEDIA,' / Difícil: ',IAG.NR_QUESTOESDIFICIL) END) AS 'Selecionar Questões do Grupo', 

SUBCATQ.DS_TITULO AS CATEGORIA, (SELECT CAT2.DS_TITULO FROM TB_CATEGORIAQUESTAO CAT2 WHERE CAT2.CD_CATEGORIAQUESTAO=SUBCATQ.CD_RAIZ) AS 'CATEGORIA RAIZ',
IQ.CD_ITEMAVALIACAO AS ID_QUESTAO, COALESCE(IQ.DS_ENUNCIADO_FILTRO, IQ.DS_ENUNCIADO) AS ENUNCIADO,
(CASE IQ.ID_SITUACAO WHEN 0 THEN 'Inativa' WHEN 1 THEN 'Ativa' ELSE '-' END) AS 'SITUAÇÃO QUESTÃO', 
(CASE IQ.ID_TIPOQUESTAO WHEN 0 THEN 'Objetiva' WHEN 1 THEN 'Múltipla Escolha' WHEN 2 THEN 'Verdadeira/Falsa' WHEN 3 THEN 'Dissertativa' 
	WHEN 4 THEN 'Escala' WHEN 5 THEN 'Entrega de Trabalho' WHEN 6 THEN 'Nota Atribuída' 
	WHEN 7 THEN (CASE IQ.ID_TEXTOSIMPLES WHEN 0 THEN 'Valor Numérico' WHEN 1 THEN 'Texto Simples' END) 
	WHEN 8 THEN 'Associativa' WHEN 9 THEN 'Completar Lacuna' END) AS 'TIPO QUESTÃO',
(CASE IQ.ID_CALCULOMULTIPLAESCOLHA WHEN 0 THEN 'Todas alternativas' WHEN 1 THEN 'Somenta corretas' ELSE '-' END) AS 'Cálculo Multipla Escolha',
-- (CASE IQ.ID_OBRIGATORIO WHEN 1 THEN 'Sim' ELSE 'Não' END) AS 'OBRIGATORIA',
(CASE IQ.ID_DIFICULDADE WHEN 0 THEN 'Fácil' WHEN 1 THEN 'Médio' WHEN 2 THEN 'Difícil' ELSE '-' END) AS 'DIFICULDADE',
  IQ.DS_FEEDBACKGERAL AS 'FEEDBACK QUESTÃO', IQ.DS_FEEDBACKAPROVADO AS 'FEEDBACK APROVADO', IQ.DS_FEEDBACKPARCIAL AS 'FEEDBACK PARCIAL', IQ.DS_FEEDBACKREPROVADO AS 'FEEDBACK REPROVADO', IQ.DS_DICA AS 'DICA',
(CASE IQ.ID_NUMERACAO WHEN 0 THEN 'a,b,c' WHEN 1 THEN 'A,B,C' WHEN 2 THEN '1,2,3' WHEN 3 THEN 'I,II,III' ELSE '-' END) AS 'NUMERAÇÃO DAS ALTERNATIVAS',
(CASE IQ.ID_ALEATORIO WHEN 1 THEN 'Sim' WHEN 0 THEN 'Não' END) AS 'ALTERNATIVAS ALEATÓRIAS',

-- ALTQ.CD_ALTERNATIVAQUESTAO, 
(CASE WHEN IQ.ID_TIPOQUESTAO NOT IN (3,4,5,6) THEN ALTQ.ID_POSICAO ELSE '-' END) AS 'POSIÇÃO DA ALTERNATIVA',
(CASE ALTQ.ID_POSICAOFIXA WHEN 0 THEN 'Não' WHEN 1 THEN 'Sim' ELSE '-' END) AS 'POSIÇÃO FIXA',
(CASE WHEN IQ.ID_TIPOQUESTAO NOT IN (3,4,5,6) THEN ALTQ.DS_ALTERNATIVA ELSE '-' END) AS 'DESCRIÇÃO DA ALTERNATIVA',
-- (CASE WHEN IQ.ID_TIPOQUESTAO NOT IN (3,4,5,6) THEN IF(ALTQ.DS_ALTERNATIVA_TEXT IS NOT NULL AND ALTQ.DS_ALTERNATIVA_TEXT != '', ALTQ.DS_ALTERNATIVA_TEXT, ALTQ.DS_ALTERNATIVA) ELSE '-' END) AS 'DESCRIÇÃO DA ALTERNATIVA',
(CASE WHEN (IQ.ID_TIPOQUESTAO=9 AND ALTQ.ID_TIPOLACUNA=0) THEN 'Texto'
	WHEN (IQ.ID_TIPOQUESTAO=9 AND ALTQ.ID_TIPOLACUNA=1) THEN 'Lacuna' 
	WHEN (IQ.ID_TIPOQUESTAO=9 AND ALTQ.ID_TIPOLACUNA=2) THEN 'Parágrafo' ELSE '-' END) AS 'Tipo Lacuna',
(CASE WHEN (IQ.ID_TIPOQUESTAO=7 AND IQ.ID_TEXTOSIMPLES=0) THEN ALTQ.NR_MARGEMERRO ELSE '-' END) AS 'Margem Erro (Texto Numérico)',
(CASE WHEN (IQ.ID_TIPOQUESTAO=7 AND IQ.ID_TEXTOSIMPLES=1) THEN (CASE IQ.ID_CASESENSITIVE WHEN 0 THEN 'Não' WHEN 1 THEN 'Sim' END) ELSE '-' END) AS 'Diferenciar Maiúsculas-Minúsculas (Texto Simples)',
(CASE IQ.ID_TIPOQUESTAO WHEN 9 THEN 			-- QUANDO questão tipo Completar Lacuna.
	(CASE WHEN ALTQ.ID_TIPOLACUNA IN (0,2) THEN '-' 	-- Alternativas tipo texto/parágrafo não possuem resposta; já as lacunas não possuem limite pra quantas respostas cada um pode ter, assim retornadas por group_concat abaixo.
		WHEN 1 THEN (SELECT CONCAT('"',GROUP_CONCAT(RL.DS_RESPOSTA ORDER BY RL.CD_RESPOSTALACUNA SEPARATOR '"; "'),'".') FROM TB_RESPOSTA_LACUNA RL WHERE RL.CD_ALTERNATIVAQUESTAO=ALTQ.CD_ALTERNATIVAQUESTAO GROUP BY RL.CD_ALTERNATIVAQUESTAO) END) 
	WHEN 8 THEN '-'	-- QUANDO questão tipo Associativa a resposta será exibida na coluna seguinte.
	ELSE 		-- SENÃO, segue case normal abaixo. Para questão tipo (3,4,5,6) Dissertativa/Escala/Entrega de Trabalho/Nota Atribuída, não se aplica.
	(CASE ALTQ.ID_CORRETA WHEN 0 THEN 'Incorreta' WHEN 1 THEN 'CORRETA' ELSE '-' END) END) AS 'ALTERNATIVAS CORRETAS',
-- ALTQ.CD_ASSOCIATIVA, 
ALTASSO.DS_DESCRICAO AS 'ASSOCIATIVA CORRETA'

FROM TB_OBJAPRENDIZAGEM O 
INNER JOIN TB_OBJAPRENDIZAGEM_AVALIACAO OAVA3 ON OAVA3.CD_OBJETOAPRENDIZAGEM=O.CD_OBJETOAPRENDIZAGEM AND O.ID_TIPO LIKE 'AVALIACAO_APRENDIZAGEM'
INNER JOIN TB_AVALIACAOLMS AVA ON AVA.CD_AVALIACAOLMS=OAVA3.CD_AVALIACAOLMS
  INNER JOIN TB_AVALIACAOLMS_ITEMAVALIACAO AVAI ON AVAI.CD_AVALIACAOLMS = AVA.CD_AVALIACAOLMS
  INNER JOIN TB_ITEMAVALIACAO IA ON IA.CD_ITEMAVALIACAO = AVAI.CD_ITEMAVALIACAO AND IA.ID_TIPO LIKE 'GRUPO'

  INNER JOIN TB_ITEMAVALIACAO_GRUPO IAG ON IAG.CD_ITEMAVALIACAO=IA.CD_ITEMAVALIACAO 
  INNER JOIN TB_GRUPOQUESTAO_CATEGORIAQUESTAO GRUPOCAT ON GRUPOCAT.CD_GRUPOQUESTAO=IA.CD_ITEMAVALIACAO AND IA.ID_TIPO LIKE 'GRUPO' -- Categorias marcadas por inteiro
  INNER JOIN TB_CATEGORIAQUESTAO CATQ ON CATQ.CD_CATEGORIAQUESTAO=GRUPOCAT.CD_CATEGORIAQUESTAO
	  	INNER JOIN TB_CATEGORIAQUESTAO SUBCATQ ON SUBCATQ.ID_HIERARQUIA LIKE CONCAT(CATQ.ID_HIERARQUIA,'%')
  LEFT JOIN TB_ITEMAVALIACAO_QUESTAO IQ ON SUBCATQ.CD_CATEGORIAQUESTAO=IQ.CD_CATEGORIAQUESTAO AND IQ.ID_TIPOAVALIACAO=0 AND IQ.ID_TIPOQUESTAO NOT IN (4) 
  LEFT JOIN TB_ALTERNATIVAQUESTAO ALTQ ON ALTQ.CD_QUESTAOLMS = IQ.CD_ITEMAVALIACAO 
  LEFT JOIN TB_ALTERNATIVA_ASSOCIATIVA ALTASSO ON ALTASSO.CD_QUESTAOLMS=IQ.CD_ITEMAVALIACAO AND ALTASSO.CD_ASSOCIATIVA=ALTQ.CD_ASSOCIATIVA
	WHERE IA.ID_TIPO='GRUPO'  AND IQ.CD_ITEMAVALIACAO IS NOT NULL 
--		AND O.CD_OBJETOAPRENDIZAGEM IN (116) -- 12,116
-- GROUP BY O.CD_OBJETOAPRENDIZAGEM, IA.CD_ITEMAVALIACAO
ORDER BY `AVALIAÇÃO`, AVAI.NR_POSICAO, `CATEGORIA RAIZ`, CATEGORIA, ENUNCIADO, ALTQ.ID_POSICAO 
-- ;
) 
) EXTRAVA 

WHERE  1=1
--	AND (EXTRAVA.`AVALIAÇÃO` LIKE 'A%')
--	AND (EXTRAVA.`AVALIAÇÃO` LIKE '%Administração de medicamentos TMO - CHN%' OR EXTRAVA.`ID AVALIAÇÃO` = 5546)
	AND EXTRAVA.`ID AVALIAÇÃO` = 3662
--	AND  EXTRAVA.ID_QUESTAO = 3744

ORDER BY EXTRAVA.`AVALIAÇÃO`, EXTRAVA.`POSIÇÃO ITEM`, EXTRAVA.`CATEGORIA RAIZ`, EXTRAVA.CATEGORIA, 
	EXTRAVA.ENUNCIADO, EXTRAVA.ID_QUESTAO, EXTRAVA.`POSIÇÃO DA ALTERNATIVA` ;